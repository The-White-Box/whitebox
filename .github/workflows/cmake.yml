# Copyright (c) 2021 The WhiteBox Authors.  All rights reserved.
# Use of this source code is governed by a 3-Clause BSD license that can be
# found in the LICENSE file.
#
# Continuous integration.

name: Build and Test

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - 'assets/**'

  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - 'assets/**'

env:
  GCC_VERSION: 13

jobs:
  build:
    name: Build and Test

    strategy:
      fail-fast: false
      matrix:
        build: [ debug, release ]
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          build-essential \
          git \
          make \
          cmake \
          ninja-build \
          pkg-config \
          gnome-desktop-testing \
          libasound2-dev \
          libpulse-dev \
          libaudio-dev \
          libjack-dev \
          libsndio-dev \
          libusb-1.0-0-dev \
          libx11-dev \
          libxext-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxfixes-dev \
          libxi-dev \
          libxss-dev \
          libwayland-dev \
          libxkbcommon-dev \
          libdrm-dev \
          libgbm-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libegl1-mesa-dev \
          libdbus-1-dev \
          libibus-1.0-dev \
          libudev-dev \
          fcitx-libs-dev
          sudo apt-get install -y gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }}
          sudo update-alternatives \
          --install /usr/bin/gcc   gcc   /usr/bin/gcc-${{ env.GCC_VERSION }}     100 \
          --slave   /usr/bin/g++ g++ /usr/bin/g++-${{ env.GCC_VERSION }}  \
          --slave   /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-${{ env.GCC_VERSION }}  \
          --slave   /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-${{ env.GCC_VERSION }}  \
          --slave   /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-${{ env.GCC_VERSION }}  \
          --slave   /usr/bin/gcov gcov /usr/bin/gcov-${{ env.GCC_VERSION }}  \
          --slave   /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-${{ env.GCC_VERSION }}  \
          --slave   /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-${{ env.GCC_VERSION }}
          sudo update-alternatives \
          --install /usr/bin/cc   cc   /usr/bin/gcc     100 \
          --slave   /usr/bin/ld ld /usr/bin/x86_64-linux-gnu-ld
          sudo update-alternatives \
          --install /usr/bin/c++ c++ /usr/bin/g++     100

      - name: Add msbuild / cmake / nmake to PATH (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          cmake --preset x86_64-apple-darwin-${{ matrix.build }}
          cmake --build --preset x86_64-apple-darwin-${{ matrix.build }}

      - name: Build (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          cmake --preset x86_64-unknown-linux-gcc-${{ matrix.build }}
          cmake --build --preset x86_64-unknown-linux-gcc-${{ matrix.build }}

      - name: Build (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          cmake --preset x86_64-pc-windows-msvc-${{ matrix.build }}
          cmake --build --preset x86_64-pc-windows-msvc-${{ matrix.build }}

      - name: Test (MacOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          ctest --preset x86_64-apple-darwin-${{ matrix.build }}-test

      - name: Test (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          ctest --preset x86_64-unknown-linux-gcc-${{ matrix.build }}-test

      - name: Test (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          ctest --preset x86_64-pc-windows-msvc-${{ matrix.build }}-test
